# Generated by Django 3.2.12 on 2022-02-11 13:59

import arches.app.models.models
import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    dependencies = [
        ("models", "8689_card_violation_message"),
    ]

    operations = [
        migrations.AlterField(
            model_name="cardcomponent",
            name="componentid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="cardcomponent",
            name="defaultconfig",
            field=models.JSONField(blank=True, db_column="defaultconfig", null=True),
        ),
        migrations.AlterField(
            model_name="cardmodel",
            name="cardid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="cardmodel",
            name="config",
            field=models.JSONField(blank=True, db_column="config", null=True),
        ),
        migrations.AlterField(
            model_name="cardxnodexwidget",
            name="config",
            field=models.JSONField(blank=True, db_column="config", null=True),
        ),
        migrations.AlterField(
            model_name="cardxnodexwidget",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="concept",
            name="conceptid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="constraintmodel",
            name="constraintid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="constraintxnode",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="ddatatype",
            name="defaultconfig",
            field=models.JSONField(blank=True, db_column="defaultconfig", null=True),
        ),
        migrations.AlterField(
            model_name="ddatatype",
            name="issearchable",
            field=models.BooleanField(default=False, null=True),
        ),
        migrations.AlterField(
            model_name="edge",
            name="edgeid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="editlog",
            name="editlogid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="editlog",
            name="newprovisionalvalue",
            field=models.JSONField(
                blank=True, db_column="newprovisionalvalue", null=True
            ),
        ),
        migrations.AlterField(
            model_name="editlog",
            name="newvalue",
            field=models.JSONField(blank=True, db_column="newvalue", null=True),
        ),
        migrations.AlterField(
            model_name="editlog",
            name="oldprovisionalvalue",
            field=models.JSONField(
                blank=True, db_column="oldprovisionalvalue", null=True
            ),
        ),
        migrations.AlterField(
            model_name="editlog",
            name="oldvalue",
            field=models.JSONField(blank=True, db_column="oldvalue", null=True),
        ),
        migrations.AlterField(
            model_name="file",
            name="fileid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="function",
            name="defaultconfig",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="function",
            name="functionid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="functionxgraph",
            name="config",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="functionxgraph",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="geocoder",
            name="geocoderid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="graphmodel",
            name="config",
            field=models.JSONField(db_column="config", default=dict),
        ),
        migrations.AlterField(
            model_name="graphmodel",
            name="graphid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="graphmodel",
            name="slug",
            field=models.TextField(
                null=True,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="graphxmapping",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="graphxmapping",
            name="mapping",
            field=models.JSONField(blank=True),
        ),
        migrations.AlterField(
            model_name="iiifmanifest",
            name="manifest",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="maplayer",
            name="layerdefinitions",
            field=models.JSONField(blank=True, db_column="layerdefinitions", null=True),
        ),
        migrations.AlterField(
            model_name="maplayer",
            name="maplayerid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="mapsource",
            name="source",
            field=models.JSONField(blank=True, db_column="source", null=True),
        ),
        migrations.AlterField(
            model_name="mobilesurveymodel",
            name="datadownloadconfig",
            field=models.JSONField(
                blank=True,
                default=arches.app.models.models.getDataDownloadConfigDefaults,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="mobilesurveymodel",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="mobilesurveymodel",
            name="onlinebasemaps",
            field=models.JSONField(blank=True, db_column="onlinebasemaps", null=True),
        ),
        migrations.AlterField(
            model_name="mobilesurveyxcard",
            name="mobile_survey_x_card_id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="mobilesurveyxgroup",
            name="mobile_survey_x_group_id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="mobilesurveyxuser",
            name="mobile_survey_x_user_id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="mobilesynclog",
            name="logid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="node",
            name="config",
            field=models.JSONField(blank=True, db_column="config", null=True),
        ),
        migrations.AlterField(
            model_name="node",
            name="nodeid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="nodegroup",
            name="nodegroupid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="notification",
            name="context",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AlterField(
            model_name="notification",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="notificationtype",
            name="typeid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="ontology",
            name="namespaces",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="ontology",
            name="ontologyid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="ontologyclass",
            name="ontologyclassid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="ontologyclass",
            name="target",
            field=models.JSONField(null=True),
        ),
        migrations.AlterField(
            model_name="plugin",
            name="config",
            field=models.JSONField(blank=True, db_column="config", null=True),
        ),
        migrations.AlterField(
            model_name="plugin",
            name="pluginid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="plugin",
            name="slug",
            field=models.TextField(
                null=True,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="relation",
            name="relationid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="reporttemplate",
            name="defaultconfig",
            field=models.JSONField(blank=True, db_column="defaultconfig", null=True),
        ),
        migrations.AlterField(
            model_name="reporttemplate",
            name="templateid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="resource2resourceconstraint",
            name="resource2resourceid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="resourceinstance",
            name="resourceinstanceid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="resourcerevisionlog",
            name="logid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="resourcexresource",
            name="resourcexid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="searchcomponent",
            name="searchcomponentid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="searchexporthistory",
            name="searchexportid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="tilemodel",
            name="data",
            field=models.JSONField(blank=True, db_column="tiledata", null=True),
        ),
        migrations.AlterField(
            model_name="tilemodel",
            name="provisionaledits",
            field=models.JSONField(blank=True, db_column="provisionaledits", null=True),
        ),
        migrations.AlterField(
            model_name="tilemodel",
            name="tileid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="tilerevisionlog",
            name="logid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="userxnotification",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="userxnotificationtype",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="userxtask",
            name="id",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="value",
            name="valueid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="widget",
            name="defaultconfig",
            field=models.JSONField(blank=True, db_column="defaultconfig", null=True),
        ),
        migrations.AlterField(
            model_name="widget",
            name="widgetid",
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="etlmodule",
            name="config",
            field=models.JSONField(blank=True, db_column="config", null=True),
        ),
        migrations.AlterField(
            model_name="etlmodule",
            name="slug",
            field=models.TextField(
                null=True,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="geojsongeometry",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="groupmapsettings",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="iiifmanifest",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="loadevent",
            name="load_details",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="loadstaging",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="loadstaging",
            name="value",
            field=models.JSONField(blank=True, db_column="value", null=True),
        ),
        migrations.AlterField(
            model_name="mapmarker",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="mapsource",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="spatialview",
            name="attributenodes",
            field=models.JSONField(blank=True, db_column="attributenodes", null=True),
        ),
        migrations.AlterField(
            model_name="userprofile",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
    ]
