# Generated by Django 4.2.11 on 2024-04-15 14:04

from django.db import migrations


def merge_differently_cased_language_codes(apps, schema_editor):
    Language = apps.get_model("models", "Language")
    Value = apps.get_model("models", "Value")
    PublishedGraph = apps.get_model("models", "PublishedGraph")

    for lang in list(Language.objects.all()):
        distinctly_cased = list(Language.objects.filter(code__iexact=lang.code).order_by("-isdefault", "-code"))
        if len(distinctly_cased) > 1:
            other_values = {
                # Ignore isdefault. If two language rows differ only by case-insensitive
                # code and isdefault, let the isdefault=True row survive. See order_by()
                (l.name, l.default_direction, l.scope)
                for l in distinctly_cased
            }
            if len(other_values) > 1:
                raise Exception(
                    "Cannot de-duplicate distinctly cased language codes: \n"
                    + str([x.code for x in distinctly_cased])
                    + "\nHINT: Ensure fields other than code and isdefault are identical."
                )
            deletes = distinctly_cased[1:]
            preserve = distinctly_cased[0]
            for delete in deletes:
                # Be careful! These FK's cascade delete.
                Value.objects.filter(language=delete.code).update(language=preserve.code)
                PublishedGraph.objects.filter(language=delete.code).update(language=preserve.code)
                delete.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("models", "9191_string_nonlocalized"),
    ]

    operations = [
        migrations.RunPython(merge_differently_cased_language_codes, migrations.RunPython.noop),
    ]
