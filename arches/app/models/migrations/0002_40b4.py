# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-04-25 11:36
from __future__ import unicode_literals

import os
import uuid
import django.db.models.deletion
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
from django.core import management
from arches.app.models.models import GraphModel
from arches.app.models.system_settings import settings
from arches.app.search.mappings import prepare_search_index, delete_search_index

def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version

    delete_search_index()
    for graphid in GraphModel.objects.filter(isresource=True).values_list('graphid', flat=True):
        prepare_search_index(str(graphid), create=True)

    settings_data_file = os.path.join(settings.ROOT_DIR, 'db', 'system_settings', 'Arches_System_Settings.json')
    local_settings_available = os.path.isfile(os.path.join(settings.SYSTEM_SETTINGS_LOCAL_PATH))

    if local_settings_available == True:
        settings_data_file = settings.SYSTEM_SETTINGS_LOCAL_PATH

    management.call_command('es', operation='index_resources')

    management.call_command('es', operation='index_resources')
    management.call_command('packages', operation='import_graphs', source=os.path.join(settings.ROOT_DIR, 'db', 'system_settings', 'Arches_System_Settings_Model.json'))
    management.call_command('packages', operation='import_business_data', source=settings_data_file, overwrite='overwrite')

def reverse_func(apps, schema_editor):
    GraphModel.objects.get(graphid=settings.SYSTEM_SETTINGS_RESOURCE_MODEL_ID).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('models', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileValue',
            fields=[
                ('valueid', models.UUIDField(default=uuid.uuid1, primary_key=True, serialize=False)),
                ('value', models.FileField(upload_to='concepts')),
            ],
            options={
                'db_table': 'values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('models.resourceinstance',),
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('models.tilemodel',),
        ),
        migrations.CreateModel(
            name='IIIFManifest',
            fields=[
                ('id', models.UUIDField(primary_key=True, default=uuid.uuid1, serialize=False)),
                ('url', models.TextField())
            ],
            options={
                'db_table': 'iiif_manifests',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='maplayer',
            name='centerx',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='maplayer',
            name='centery',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='maplayer',
            name='zoom',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='ddatatype',
            name='isgeometric',
            field=models.BooleanField(),
        ),
        migrations.AlterField(
            model_name='edge',
            name='graph',
            field=models.ForeignKey(blank=True, db_column='graphid', null=True, on_delete=django.db.models.deletion.CASCADE, to='models.GraphModel'),
        ),
        migrations.AlterField(
            model_name='form',
            name='graph',
            field=models.ForeignKey(db_column='graphid', on_delete=django.db.models.deletion.CASCADE, to='models.GraphModel'),
        ),
        migrations.AlterField(
            model_name='function',
            name='defaultconfig',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='functionxgraph',
            name='config',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='graphxmapping',
            name='mapping',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True),
        ),
        migrations.AlterField(
            model_name='node',
            name='graph',
            field=models.ForeignKey(blank=True, db_column='graphid', null=True, on_delete=django.db.models.deletion.CASCADE, to='models.GraphModel'),
        ),
        migrations.AlterField(
            model_name='tileserverlayer',
            name='config',
            field=django.contrib.postgres.fields.jsonb.JSONField(),
        ),
        migrations.AlterField(
            model_name='tileserverlayer',
            name='name',
            field=models.TextField(primary_key=True, serialize=False, unique=True),
        ),
        migrations.AddField(
            model_name='ddatatype',
            name='issearchable',
            field=models.NullBooleanField(default=False),
        ),
        migrations.AddField(
            model_name='node',
            name='issearchable',
            field=models.BooleanField(default=True),
        ),
    ]
