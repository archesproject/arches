# Generated by Django 4.2.11 on 2024-03-15 09:08
import uuid

import django.core.validators
from django.db import migrations, models
import django.db.models.constraints
import django.db.models.deletion
import django.db.models.fields.json
import django.db.models.functions.comparison

from arches.app.models.fields.i18n import I18n_String


def add_plugins(apps, schema_editor):
    Plugin = apps.get_model("models", "Plugin")

    Plugin(
        pluginid="60aa3e80-4aea-4042-a76e-5a872b1c36a0",
        name=I18n_String("Controlled List Manager"),
        icon="fa fa-code-fork",
        component="views/components/plugins/controlled-list-manager",
        componentname="controlled-list-manager",
        config={"show": True},
        slug="controlled-list-manager",
        sortorder=0,
    ).save()


def remove_plugin(apps, schema_editor):
    Plugin = apps.get_model("models", "Plugin")
    Plugin.objects.filter(slug="controlled-list-manager").delete()


class Migration(migrations.Migration):
    dependencies = [
        ("models", "10515_i18n_plugins"),
    ]

    operations = [
        migrations.RunPython(add_plugins, remove_plugin),
        migrations.CreateModel(
            name="ControlledList",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=127)),
                ("dynamic", models.BooleanField(default=False)),
                ("search_only", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "controlled_lists",
            },
        ),
        migrations.CreateModel(
            name="ControlledListItem",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("uri", models.URLField(blank=True, max_length=2048, null=True, unique=True)),
                ("sortorder", models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ("guide", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "controlled_list_items",
            },
        ),
        migrations.CreateModel(
            name="ControlledListItemLabel",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("value", models.CharField(max_length=1024)),
            ],
            options={
                "db_table": "controlled_list_item_labels",
            },
        ),
        migrations.AddIndex(
            model_name="node",
            index=models.Index(
                django.db.models.functions.comparison.Cast(
                    django.db.models.fields.json.KeyTextTransform("controlledList", "config"), output_field=models.UUIDField()
                ),
                name="lists_reffed_by_node_idx",
            ),
        ),
        migrations.AddField(
            model_name="controlledlistitemlabel",
            name="controlled_list_item",
            field=models.ForeignKey(
                db_column="itemid",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="controlled_list_item_labels",
                to="models.controlledlistitem",
            ),
        ),
        migrations.AddField(
            model_name="controlledlistitemlabel",
            name="language",
            field=models.ForeignKey(
                db_column="languageid", on_delete=django.db.models.deletion.PROTECT, to="models.language", to_field="code"
            ),
        ),
        migrations.AddField(
            model_name="controlledlistitemlabel",
            name="value_type",
            field=models.ForeignKey(
                limit_choices_to={"category": "label"}, on_delete=django.db.models.deletion.PROTECT, to="models.dvaluetype"
            ),
        ),
        migrations.AddField(
            model_name="controlledlistitem",
            name="controlled_list",
            field=models.ForeignKey(
                db_column="listid",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="controlled_list_items",
                to="models.controlledlist",
            ),
        ),
        migrations.AddField(
            model_name="controlledlistitem",
            name="parent",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="children", to="models.controlledlistitem"
            ),
        ),
        migrations.AddConstraint(
            model_name="controlledlistitemlabel",
            constraint=models.UniqueConstraint(
                fields=("controlled_list_item", "value", "value_type", "language"), name="unique_item_value_valuetype_language"
            ),
        ),
        migrations.AddConstraint(
            model_name="controlledlistitemlabel",
            constraint=models.UniqueConstraint(
                condition=models.Q(("value_type", "prefLabel")),
                fields=("controlled_list_item", "language"),
                name="unique_item_preflabel_language",
            ),
        ),
        migrations.AddConstraint(
            model_name="controlledlistitem",
            constraint=models.UniqueConstraint(
                deferrable=django.db.models.constraints.Deferrable["DEFERRED"],
                fields=("controlled_list", "sortorder"),
                name="unique_list_sortorder",
            ),
        ),
    ]
