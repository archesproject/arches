name: CI

on: 
  # push: -- just run on PRs for now
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:13-3.0
        env:
          POSTGRES_PASSWORD: postgis
          POSTGRES_DB: ${{ github.event.repository.name }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install Java, GDAL, and other system dependencies
        run: |
          sudo apt update
          sudo apt-get install libxml2-dev libpq-dev openjdk-8-jdk libgdal-dev libxslt-dev
          echo Postgres and ES dependencies installed

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install -r ${{ github.event.repository.name }}/install/requirements.txt
          pip install -r ${{ github.event.repository.name }}/install/requirements_dev.txt
          echo Python packages installed

      - uses: ankane/setup-elasticsearch@v1
        with:
          elasticsearch-version: 8

      - name: Webpack frontend files
        run: |
          echo "Removing yarn.lock due to yarn v1 package resolution issues"
          echo "https://github.com/iarna/wide-align/issues/63"
          rm yarn.lock
          yarn && yarn build_test

      - name: Check for missing migrations
        run: |
          python manage.py makemigrations --check

      - name: Run unit tests
        run: |
          python -W default::DeprecationWarning -m coverage run manage.py test tests --settings="tests.test_settings"

      - name: Generate report coverage
        run: |
          coverage json

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.json
          overwrite: true

  check-coverage:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use the latest available version
          check-latest: true

      - name: Download coverage report artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .

      - name: Report coverage
        run: |
          cat coverage.json

      - name: Retrieve baseline coverage
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}

          if ! git show ${{ github.event.pull_request.base.ref }}:coverage.json > /dev/null; then
            echo "Error: coverage.json does not exist in the branch."
            exit 1
          fi

          baseline_coverage=$(git show ${{ github.event.pull_request.base.ref }}:coverage.json | grep -o '"totals": {[^}]*' | grep -o '"percent_covered": [0-9.]*' | awk -F ': ' '{print $2}')
          echo "$baseline_coverage" > .coverage_baseline

      - name: Compare coverage with baseline
        if: github.event_name == 'pull_request'
        run: |
          current_coverage=$(cat coverage.json | grep -o '"totals": {[^}]*' | grep -o '"percent_covered": [0-9.]*' | awk -F ': ' '{print $2}')
          baseline_coverage=$(cat .coverage_baseline)

          # Compare current coverage with baseline coverage using floating-point comparison
          if awk -v current="$current_coverage" -v baseline="$baseline_coverage" 'BEGIN { exit (current < baseline) ? 0 : 1 }'; then
            echo "Coverage decreased from $baseline_coverage% to $current_coverage%"
            exit 1
          else
            echo "$baseline_coverage% == $current_coverage%, Coverage didn't decrease. Committing new coverage.json."

            git config user.name github-actions
            git config user.email github-actions@github.com

            git add -f coverage.json
            git commit -m "automatically update coverage.json"
            git push -f origin HEAD:${{ github.head_ref }}
          fi
